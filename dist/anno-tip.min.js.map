{"version":3,"file":"anno-tip.min.js.map","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/TextMonitor.js","../src/AnnoTip.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\"use strict\";\n\nimport $ from 'jquery';\n\nconst NS_SEL = \"annotip-text\";\n\nfunction isMultiElement(range1, range2) {\n\treturn $.uniqueSort([\n\t\trange1.startContainer, range1.endContainer, \n\t\trange2.startContainer, range2.endContainer\n\t]).length > 0;\n}\n\nfunction normalizeRange(range) {\n\tconst startNode = range.startContainer,\n\t\tendNode = range.endContainer;\n\n\tif (startNode == endNode) {\n\t\tif (range.startOffset > range.endOffset) {\n\t\t\tconst _t = range.startOffset;\n\n\t\t\trange.setStartOffset(range.endOffset);\n\t\t\trange.setEndOffset(_t);\n\t\t}\n\t}\n\n\treturn range;\n}\n\nfunction mergeRanges(ranges) {\n\tif (ranges.length == 0)\n\t\treturn null;\n\tif (ranges.length == 1)\n\t\treturn ranges[0];\n\t\n\t// TODO: Make sure the ranges are properly ordered.\n\tconst lastR = ranges[ranges.length - 1],\n\t\tunitedR = document.createRange();\n\n\tunitedR.setStart(ranges[0].startContainer, ranges[0].startOffset);\n\tunitedR.setEnd(lastR.endContainer, lastR.endOffset);\n\n\treturn unitedR;\n}\n\n\n/**\n * A wrapper of relevant selection data, to be passed to {@link AnnoTip}.\n * @param {String} content The plain text version of the selected content\n * @param {Event} event The event that triggered the selection (mouseup)\n * @param {Array<Range>} ranges The array of ranges, that this selection occupies\n * @private\n */\nfunction TextSelection(selection, event, ranges) {\n\tthis.selection = selection;\n\tthis.content = selection.toString();\n\tthis.event = event;\n\tthis.range = mergeRanges(ranges);\n}\n\n/**\n * Returns the DOM element that wrapps the selection.\n * @returns {Element} The DOM element containing the entire selection.\n * @private\n */\nTextSelection.prototype.getElement = function() {\n\tconst parentEl = this.range.commonAncestorContainer;\n\n\treturn parentEl instanceof Element ? parentEl : parentEl.parentElement;\n};\n\n/**\n * Returns the bounding box of the selection.\n * @returns {DOMRect} The rectangle containing all elements & nodes of the selection.\n * @private\n */\nTextSelection.prototype.getBoundingRect = function () {\n\treturn this.range.getBoundingClientRect();\n};\n\n/**\n * Discards the selection, i.e. - deselect.\n * @returns {TextSelection} For chaining calls.\n * @private\n */\nTextSelection.prototype.discard = function () {\n\tthis.selection.removeAllRanges();\n\n\treturn this;\n};\n\n\n/**\n * Initializes a text selection monitoring mechanis.about-content\n * \n * @param {Element} element The parent DOM element to attach the whole text selection monitoring mechanism to.\n * @param {Object} settings Settings for monitoring. Check {@link TextMonitor.defaults}.\n * @private\n */ \nfunction TextMonitor(selector, settings) {\n\tthis.elements = selector;\n\tthis.settings = $.extend(true, {}, TextMonitor.defaults, settings);\n\n\tconst oneElement = $(selector)[0];\n\n\tif (!oneElement)\n\t\tconsole.log(\"AnnoTip: No elements found to attach using '\" + selector + \"'\");\n\telse if (oneElement.ownerDocument) {\n\t\tthis.document = oneElement.ownerDocument;\n\t\t\n\t\t$(this.document.body).on('mouseup.' + NS_SEL, (e) => this._handleSelection(e));\n\t} else {\n\t\tthrow new Error(`Non-attached element(s) used for text selection: ${selector}`);\n\t}\n}\n\n/**\n * Detach the text selection monitoring mechanism.\n * @returns {TextMonitor} For chaining calls.\n * @private\n */\nTextMonitor.prototype.detach = function () {\n\tif (this.document)\n\t\t$(this.document.body).off('.' + NS_SEL);\n\n\treturn this;\n};\n\n/**\n * Handles the mouse-up event, supposedly after a selection is made.\n * @param event The actual mouse-up event.\n * @private\n */\nTextMonitor.prototype._handleSelection = function (event) {\n\tconst selection = this.document.getSelection();\n\n\tif (selection.isCollapsed) return;\n\t\n\tconst myRanges = [];\n\n\tlet mainRoot = null;\n\n\tfor (let i = 0; i < selection.rangeCount; ++i) {\n\t\tconst r = selection.getRangeAt(i),\n\t\t\ttheRoot = $(r.commonAncestorContainer).parents().filter(this.elements)[0];\n\n\t\tif (!mainRoot)\n\t\t\tmainRoot = theRoot;\n\t\tif (!theRoot || mainRoot != theRoot)\n\t\t\tcontinue; // We don't allow multi-rooted selections.\n\t\telse if (this.multipleNodes || myRanges.length == 0 || !isMultiElement(myRanges[0], r))\n\t\t\tmyRanges.push(normalizeRange(r));\n\t}\n\n\tif (myRanges.length > 0)\n\t\tthis.settings.onSelection(mainRoot, new TextSelection(selection, event, myRanges));\n};\n\n/**\n * Default options.\n * @private\n */\nTextMonitor.defaults = {\n\tmultipleNodes: false,\n\tonSelection: null\n};\n\nexport default TextMonitor;\n","\"use strict\";\n\n/**\n * AnnoTip library main source.\n * Author: Ivan (Jonan) Georgiev, 2020\n */\nimport './AnnoTip.css';\n\nimport $ from 'jquery';\nimport tippy from 'tippy.js';\nimport TextMonitor from './TextMonitor';\nimport CssSelectorGenerator from 'css-selector-generator';\n\nconst NS_SEL = 'annotip-el';\nconst NS_ANNO = 'annotip-main';\nconst DEF_CONTENT = `<textarea placeholder=\"Enter your comment...\"></textarea>`;\nconst DEF_ACTIONS = [\n\t{\n\t\taction: \"cancel\",\n\t\thelp: \"Cancel the annotation\"\n\t}, {\n\t\taction: \"edit\",\n\t\thelp: \"Make the annotation\"\n\t}\n];\nconst EXPANDED_ACTIONS = [\n\t{\n\t\taction: \"cancel\",\n\t\thelp: \"Discard the annotation\"\n\t}, {\n\t\taction: \"ok\",\n\t\thelp: \"Confirm the annotation\"\n\t}\n];\n\n\n/**\n * The wrapper of annotation object being passed around during the whole process.\n * @param {Object} context The context, as being passed to AnnoTip with the settings\n * @param {String} selection The content (text) that is selected\n * @param {Range} range The DOM nodes range, that this selection occupies\n * @param {Event} event The DOM Event that triggered the annotation mechanism\n * @param {Element} element The DOM element, holding the selection\n * @param {String} reverseSelector The CSS selector string pointing the the exact element.\n * @description The `element` represents the closest common ancesstor of the nodes\n * in `range`, which - in most cases - is limited to one element, anyways.\n*/\nfunction Anno(base) {\n\t$.extend(true, this, base);\n}\n\n/**\n * Some AnnoTip helpers\n * @ignore\n */\nconst prepareButton = (info) => `\n\t<button data-annotip-action=\"${info.action}\"\n\t\t\tclass=\"annotip-action-${info.action}\"\n\t\t\ttitle=\"${info.help || \"\"}\"\n\t/>`;\n\n/**\n * Initialize the annotation engine\n * @param {Object} settings Custom settings for the annotation engine.\n * @returns {AnnoTip} The instance just created.\n */\nfunction AnnoTip(settings) {\n\tthis.settings = $.extend(true, {}, AnnoTip.defaults, settings);\n\t\n\t// Normalize the settings\n\tif (this.settings.actionsHtml === null)\n\t\tthis.settings.actionsHtml = $.map(DEF_ACTIONS, (a) => prepareButton(a)).join('');\n\tthis.rootElement = $(settings.root || document);\n\n\ttippy.setDefaultProps(this.settings.tippySettings);\n\t\n\tthis.monitors = [];\n\tthis.tp = null;\n}\n\n/**\n * Attach handlers on, according to settings provided during initialization\n * \n * @returns {AnnoTip} A self instance for chaining invocations.\n * @description This method can be invoked many times, with difference selectors.\n */\nAnnoTip.prototype.attach = function () {\n\tif (this.settings.textSelector !== false) {\n\t\tthis.monitors.push(new TextMonitor(this.settings.textSelector, {\n\t\t\tmultipleNodes: this.settings.multiTextNodes,\n\t\t\tonSelection: (content, event, range) => this._handleSelection(content, event, range)\n\t\t}));\n\t}\n\n\tif (this.settings.elementSelector !== false) {\n\t\tthis.rootElement.on('click.' + NS_SEL, this.settings.elementSelector, (event) => {\n\t\t\tthis._handleClick(event);\n\t\t});\n\t}\n\n\treturn this;\n};\n\n/**\n * Apply the list of annotatons to the page, so that they can be edited later.\n * \n * @param {Element} root The base to be used for relative DOM paths stored in the annotations.\n * @param {Array<Anno>} annos List of annotations in the same format, as they were created.\n * @param {Function} handler The handler to be invoked for each annotation and located element.\n * The expected format is: `function (anno)`.\n * @returns {AnnoTip} A self instance for chaining invocations.\n * @description The routine initially fills the `element` property of each annotation object, based\n * on the stored `reverseSelector` and then, if a handler is passed, invokes it with the anno object.\n */\nAnnoTip.prototype.applyAnnos = function (root, annos, handler) {\n\tfor (let i = 0; i < annos.length; ++i) {\n\t\tconst oneAnno = annos[i];\n\t\n\t\toneAnno.element = $(oneAnno.reverseSelector, root)[0];\n\t\tthis._call(handler, oneAnno);\n\t}\n\t\n\treturn this;\n};\n\n/**\n * Close the annotation box, if it is openned at all.\n * @returns {AnnoTip} A self instance for chaining invocations.\n */\nAnnoTip.prototype.discard = function () {\n\tif (this.tp != null) {\n\t\tthis.tp.destroy();\n\t\tthis.tp = null;\n\t}\n\n\tthis._tippyBox$ = null;\n\n\treturn this;\n};\n\n/**\n * Update the content and actions lines of the annotation box,\n * based on the newly provided object.\n * \n * @param {Object} anno The annotation object to be used for content resetting\n * @returns {AnnoTip} A self instance for chaining invocations.\n */\nAnnoTip.prototype.update = function (anno) {\n\tthis.tp.setContent(this._prepareFrame({ \n\t\tactions: anno.actionsHtml || $.map(EXPANDED_ACTIONS, (a) => prepareButton(a)).join(''),\n\t\tcontent: anno.content || DEF_CONTENT\n\t}));\n\n\treturn this;\n};\n\n/**\n * Detach the AnnoTip from the page.\n * @returns {AnnoTip} A self instance for chaining invocations.\n*/\nAnnoTip.prototype.detach = function () {\n\t// Destroy the Tippy instance, if such exists.\n\tif (this.tp != null)\n\t\tthis.tp.destroy();\n\n\t// Detach all monitors\n\t$.each(this.monitors, (i, s) => s.detach());\n\tthis.monitors = [];\n\n\t// Detach from elements\n\tthis.rootElement.off('click.' + NS_SEL, this.settings.elementSelector);\n\n\treturn this;\n};\n\nAnnoTip.prototype.getFrame = function () {\n\treturn $('div.annotip-frame', this._getTippyBox()[0]);\n};\n\n/**\n * Private methods\n * @ignore\n */\n\nAnnoTip.prototype._getTippyBox = function () {\n\tif (!this._tippyBox$)\n\t\tthis._tippyBox$ = $(\"div.tippy-box\");\n\n\treturn this._tippyBox$;\n};\n\nAnnoTip.prototype._prepareFrame = function (info) {\n\tconst frameClasses = ['annotip-frame'];\n\n\tif (this.settings.tippySettings.theme)\n\t\tframeClasses.push(this.settings.tippySettings.theme);\n\tif (typeof this.settings.classNames === 'string')\n\t\tframeClasses.push(this.settings.classNames);\n\telse if (Array.isArray(this.settings.classNames))\n\t\tframeClasses.push(...this.settings.classNames);\n\t\n\treturn `\n\t\t<div class=\"${frameClasses.join(' ')}\">\n\t\t\t<div class=\"annotip-dlg\">${info.content}</div>\n\t\t\t<div class=\"annotip-actions\">${info.actions}</div>\n\t\t</div>`;\n};\n\nAnnoTip.prototype._handleSelection = function (selRoot, selection) {\n\tconst theEl = selection.getElement();\n\tconst anno = new Anno({\n\t\tcontext: this.settings.context,\n\t\tselection: selection.content,\n\t\trange: selection.range,\n\t\tevent: selection.event,\n\t\telement: theEl,\n\t\troot: selRoot,\n\t\treverseSelector: this.settings.cssReverseOptions !== false \n\t\t\t? CssSelectorGenerator(\n\t\t\t\ttheEl, \n\t\t\t\t$.extend({ root: this.rootElement[0] }, this.settings.cssReverseOptions)\n\t\t\t\t)\n\t\t\t: null\n\t});\n\n\tif (this.tp == null && this._call('onSelection', anno) !== false)\n\t\tthis._showAnnoBox(anno, selection.getBoundingRect(), () => selection.discard());\n};\n\nAnnoTip.prototype._handleClick = function (event) {\n\tconst theEl = event.target;\n\tconst anno = new Anno({\n\t\tcontext: this.settings.context,\n\t\tselection: null,\n\t\trange: null,\n\t\tevent: event,\n\t\telement: theEl,\n\t\troot: event.currentTarget,\n\t\treverseSelector: this.settings.cssReverseOptions !== false \n\t\t\t? CssSelectorGenerator(\n\t\t\t\ttheEl, \n\t\t\t\t$.extend({ root: this.rootElement[0] }, this.settings.cssReverseOptions)\n\t\t\t\t)\n\t\t\t: null\n\t});\n\n\tif (this.tp == null && this._call('onElement', anno) !== false)\n\t\tthis._showAnnoBox(anno, theEl.getBoundingClientRect());\n};\n\t\nAnnoTip.prototype._showAnnoBox = function (anno, bbox, discardHnd) {\n\t// Cleanup the previous instance, if such was created.\n\tif (this.tp != null)\n\t\tthis.tp.destroy();\n\n\t// Go, and create a new one.\n\tthis.tp = new tippy(anno.element, {\n\t\tcontent: this._prepareFrame({ \n\t\t\tactions: anno.actionsHtml || this.settings.actionsHtml, \n\t\t\tcontent: anno.content || ''\n\t\t}),\n\t\tappendTo: document.body,\n\t\tonShown: () => {\n\t\t\tthis._getTippyBox().on('click.' + NS_ANNO, 'div.annotip-actions button', (e) => {\n\t\t\t\tthis._call('onAction', $(e.currentTarget).data('annotipAction'), anno, e);\n\t\t\t});\n\t\t},\n\t\tonClickOutside: (tp) => tp.destroy(),\n\t\tonHide: () => this._call('onClose', anno) !== false,\n\t\tonDestroy: () => { \n\t\t\tthis.tp = null; // This prevents a loop.\n\t\t\tthis.discard(); \n\t\t\tthis._call(discardHnd, anno);\n\t\t},\n\t\tgetReferenceClientRect: () => bbox\n\t});\n};\n\nAnnoTip.prototype._call = function (hnd, ...moreArgs) {\n\tif (typeof hnd === 'string')\n\t\thnd = this.settings[hnd];\n\n\treturn typeof hnd === 'function' ? hnd.apply(this, moreArgs) : undefined;\n};\n\n/**\n * Default settings.\n */\nAnnoTip.defaults = {\n\t/**\n\t * The user-provided context to be added to each {@link Anno} created.\n\t */\n\tcontext: null,\n\n\t/**\n\t * Root element to attach all text selection and element monitoring to.\n\t * Defaults to `document`.\n\t */\n\troot: null,\n\n\t/**\n\t * Whether to install text selection monitoring. {@link TextMonitor}.\n\t * Currently this is the only supported mode.\n\t */\n\ttextSelector: true,\n\n\t/**\n\t * Whether to allow selection of more than one Node as part of text\n\t * selection.\n\t */\n\tmultiTextNodes: false,\n\n\t/**\n\t * Whether to install element click/handling mointoring. Not supported.\n\t */\n\telementSelector: true,\n\n\t/**\n\t * A custom-provided HTML for action buttons, which are openned when a\n\t * selection is recognized.\n\t */\n\tactionsHtml: null,\n\n\t/**\n\t * Additional class-names to be applied to the annotation frame DOM element. \n\t * Can be both array and string (with one or more class names).\n\t */\n\tclassNames: null,\n\n\t/**\n\t * Options for css reverse selector, builder, used to construct the {@link Anno}\n\t * `reverseSelector` property. Check {@link https://www.npmjs.com/package/css-selector-generator}.\n\t * The default value is `false`, i.e. - no css traversing.\n\t */\n\tcssReverseOptions: false,\n\n\t/**\n\t * The settings to be passed to the underlying Tippy.js box engine.\n\t * {@link https://atomiks.github.io/tippyjs/}.\n\t */\n\ttippySettings: {\n\t\tplacement: 'auto',\n\t\thideOnClick: false,\n\t\ttrigger: 'manual',\n\t\tallowHTML: true,\n\t\tinteractive: true,\n\t\tshowOnCreate: true\n\t},\n\n\t/**\n\t * Handler to be invoked when a text selection is made. The constructed {@link Anno} object\n\t * is passed.\n\t */\n\tonSelection: null,\n\n\t/**\n\t * Handler to be invoked when an element click is detected. The constructed {@link Anno} object\n\t * is passed.\n\t */\n\tonElement: null,\n\n\n\t/**\n\t * Handler to be invoked on user action. The default actions are `edit`, `ok` and `cancel`.\n\t * The constructed {@link Anno} object is passed.\n\t */\n\tonAction: null,\n\n\t/**\n\t * Handler to be invoked when the annotation box is about to be closed.\n\t * The constructed {@link Anno} object is passed.\n\t */\n\tonClose: null\n};\n\nexport default AnnoTip;\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","normalizeRange","range","startContainer","endContainer","startOffset","endOffset","_t","setStartOffset","setEndOffset","TextSelection","selection","event","ranges","content","toString","length","lastR","unitedR","createRange","setStart","setEnd","mergeRanges","TextMonitor","selector","settings","elements","$","extend","defaults","oneElement","ownerDocument","Error","this","body","on","e","_this","_handleSelection","console","log","prototype","getElement","parentEl","commonAncestorContainer","Element","parentElement","getBoundingRect","getBoundingClientRect","discard","removeAllRanges","detach","off","getSelection","isCollapsed","range1","range2","myRanges","mainRoot","i","rangeCount","r","getRangeAt","theRoot","parents","filter","multipleNodes","uniqueSort","push","onSelection","DEF_ACTIONS","action","help","EXPANDED_ACTIONS","Anno","base","prepareButton","info","AnnoTip","actionsHtml","map","a","join","rootElement","root","tippy","setDefaultProps","tippySettings","monitors","tp","attach","textSelector","multiTextNodes","elementSelector","_handleClick","applyAnnos","annos","handler","oneAnno","element","reverseSelector","_call","destroy","_tippyBox$","update","anno","setContent","_prepareFrame","actions","each","s","getFrame","_getTippyBox","frameClasses","theme","classNames","Array","isArray","selRoot","theEl","context","cssReverseOptions","CssSelectorGenerator","_showAnnoBox","target","currentTarget","bbox","discardHnd","appendTo","onShown","_this2","data","onClickOutside","onHide","onDestroy","getReferenceClientRect","hnd","moreArgs","apply","undefined","placement","hideOnClick","trigger","allowHTML","interactive","showOnCreate","onElement","onAction","onClose"],"mappings":"q3BAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,QACxBC,EAAWD,EAAIC,YAEdF,GAA2B,oBAAbG,cAEfC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,oh9BCV9C,SAASe,EAAeC,MACLA,EAAMC,gBACbD,EAAME,cAGZF,EAAMG,YAAcH,EAAMI,UAAW,KAClCC,EAAKL,EAAMG,YAEjBH,EAAMM,eAAeN,EAAMI,WAC3BJ,EAAMO,aAAaF,UAIdL,EA2BR,SAASQ,EAAcC,EAAWC,EAAOC,QACnCF,UAAYA,OACZG,QAAUH,EAAUI,gBACpBH,MAAQA,OACRV,MA5BN,SAAqBW,MACC,GAAjBA,EAAOG,OACV,OAAO,QACa,GAAjBH,EAAOG,OACV,OAAOH,EAAO,OAGTI,EAAQJ,EAAOA,EAAOG,OAAS,GACpCE,EAAU7B,SAAS8B,qBAEpBD,EAAQE,SAASP,EAAO,GAAGV,eAAgBU,EAAO,GAAGR,aACrDa,EAAQG,OAAOJ,EAAMb,aAAca,EAAMX,WAElCY,EAeMI,CAAYT,GA0C1B,SAASU,EAAYC,EAAUC,mBACzBC,SAAWF,OACXC,SAAWE,UAAEC,QAAO,EAAM,GAAIL,EAAYM,SAAUJ,OAEnDK,EAAaH,UAAEH,GAAU,MAE1BM,EAEA,CAAA,IAAIA,EAAWC,oBAKb,IAAIC,iEAA0DR,SAJ/DnC,SAAWyC,EAAWC,cAE3BJ,UAAEM,KAAK5C,SAAS6C,MAAMC,GAAG,wBAAqB,SAACC,UAAMC,EAAKC,iBAAiBF,WAJ3EG,QAAQC,IAAI,+CAAiDhB,EAAW,KAzC1Ed,EAAc+B,UAAUC,WAAa,eAC9BC,EAAWV,KAAK/B,MAAM0C,+BAErBD,aAAoBE,QAAUF,EAAWA,EAASG,eAQ1DpC,EAAc+B,UAAUM,gBAAkB,kBAClCd,KAAK/B,MAAM8C,yBAQnBtC,EAAc+B,UAAUQ,QAAU,uBAC5BtC,UAAUuC,kBAERjB,MAiCRV,EAAYkB,UAAUU,OAAS,kBAC1BlB,KAAK5C,UACRsC,UAAEM,KAAK5C,SAAS6C,MAAMkB,IAAI,iBAEpBnB,MAQRV,EAAYkB,UAAUH,iBAAmB,SAAU1B,OAC5CD,EAAYsB,KAAK5C,SAASgE,mBAE5B1C,EAAU2C,qBAlISC,EAAQC,EAoIzBC,EAAW,GAEbC,EAAW,KAENC,EAAI,EAAGA,EAAIhD,EAAUiD,aAAcD,EAAG,KACxCE,EAAIlD,EAAUmD,WAAWH,GAC9BI,EAAUpC,UAAEkC,EAAEjB,yBAAyBoB,UAAUC,OAAOhC,KAAKP,UAAU,GAEnEgC,IACJA,EAAWK,GACPA,GAAWL,GAAYK,KAEnB9B,KAAKiC,eAAoC,GAAnBT,EAASzC,SAhJlBuC,EAgJiDE,EAAS,GAhJlDD,EAgJsDK,EA/I9ElC,UAAEwC,WAAW,CACnBZ,EAAOpD,eAAgBoD,EAAOnD,aAC9BoD,EAAOrD,eAAgBqD,EAAOpD,eAC5BY,OAAS,IA6IVyC,EAASW,KAAKnE,EAAe4D,KAG3BJ,EAASzC,OAAS,GACrBiB,KAAKR,SAAS4C,YAAYX,EAAU,IAAIhD,EAAcC,EAAWC,EAAO6C,MAO1ElC,EAAYM,SAAW,CACtBqC,eAAe,EACfG,YAAa,MCvJd,IAGMC,EAAc,CACnB,CACCC,OAAQ,SACRC,KAAM,yBACJ,CACFD,OAAQ,OACRC,KAAM,wBAGFC,EAAmB,CACxB,CACCF,OAAQ,SACRC,KAAM,0BACJ,CACFD,OAAQ,KACRC,KAAM,2BAgBR,SAASE,EAAKC,GACbhD,UAAEC,QAAO,EAAMK,KAAM0C,GAOtB,IAAMC,EAAgB,SAACC,oDACSA,EAAKN,iDACVM,EAAKN,kCACpBM,EAAKL,MAAQ,eAQzB,SAASM,EAAQrD,QACXA,SAAWE,UAAEC,QAAO,EAAM,GAAIkD,EAAQjD,SAAUJ,GAGnB,OAA9BQ,KAAKR,SAASsD,cACjB9C,KAAKR,SAASsD,YAAcpD,UAAEqD,IAAIV,GAAa,SAACW,UAAML,EAAcK,MAAIC,KAAK,UACzEC,YAAcxD,UAAEF,EAAS2D,MAAQ/F,UAEtCgG,UAAMC,gBAAgBrD,KAAKR,SAAS8D,oBAE/BC,SAAW,QACXC,GAAK,YASXX,EAAQrC,UAAUiD,OAAS,6BACS,IAA/BzD,KAAKR,SAASkE,mBACZH,SAASpB,KAAK,IAAI7C,EAAYU,KAAKR,SAASkE,aAAc,CAC9DzB,cAAejC,KAAKR,SAASmE,eAC7BvB,YAAa,SAACvD,EAASF,EAAOV,UAAUmC,EAAKC,iBAAiBxB,EAASF,EAAOV,QAI1C,IAAlC+B,KAAKR,SAASoE,sBACZV,YAAYhD,GAAG,mBAAmBF,KAAKR,SAASoE,iBAAiB,SAACjF,GACtEyB,EAAKyD,aAAalF,MAIbqB,MAcR6C,EAAQrC,UAAUsD,WAAa,SAAUX,EAAMY,EAAOC,OAChD,IAAItC,EAAI,EAAGA,EAAIqC,EAAMhF,SAAU2C,EAAG,KAChCuC,EAAUF,EAAMrC,GAEtBuC,EAAQC,QAAUxE,UAAEuE,EAAQE,gBAAiBhB,GAAM,QAC9CiB,MAAMJ,EAASC,UAGdjE,MAOR6C,EAAQrC,UAAUQ,QAAU,kBACZ,MAAXhB,KAAKwD,UACHA,GAAGa,eACHb,GAAK,WAGNc,WAAa,KAEXtE,MAUR6C,EAAQrC,UAAU+D,OAAS,SAAUC,eAC/BhB,GAAGiB,WAAWzE,KAAK0E,cAAc,CACrCC,QAASH,EAAK1B,aAAepD,UAAEqD,IAAIP,GAAkB,SAACQ,UAAML,EAAcK,MAAIC,KAAK,IACnFpE,QAAS2F,EAAK3F,wEAGRmB,MAOR6C,EAAQrC,UAAUU,OAAS,kBAEX,MAAXlB,KAAKwD,IACRxD,KAAKwD,GAAGa,UAGT3E,UAAEkF,KAAK5E,KAAKuD,UAAU,SAAC7B,EAAGmD,UAAMA,EAAE3D,iBAC7BqC,SAAW,QAGXL,YAAY/B,IAAI,mBAAmBnB,KAAKR,SAASoE,iBAE/C5D,MAGR6C,EAAQrC,UAAUsE,SAAW,kBACrBpF,UAAE,oBAAqBM,KAAK+E,eAAe,KAQnDlC,EAAQrC,UAAUuE,aAAe,kBAC3B/E,KAAKsE,aACTtE,KAAKsE,WAAa5E,UAAE,kBAEdM,KAAKsE,YAGbzB,EAAQrC,UAAUkE,cAAgB,SAAU9B,OACrCoC,EAAe,CAAC,wBAElBhF,KAAKR,SAAS8D,cAAc2B,OAC/BD,EAAa7C,KAAKnC,KAAKR,SAAS8D,cAAc2B,OACP,iBAA7BjF,KAAKR,SAAS0F,WACxBF,EAAa7C,KAAKnC,KAAKR,SAAS0F,YACxBC,MAAMC,QAAQpF,KAAKR,SAAS0F,aACpCF,EAAa7C,WAAb6C,IAAqBhF,KAAKR,SAAS0F,yCAGrBF,EAAa/B,KAAK,mDACJL,EAAK/D,8DACD+D,EAAK+B,+BAIvC9B,EAAQrC,UAAUH,iBAAmB,SAAUgF,EAAS3G,OACjD4G,EAAQ5G,EAAU+B,aAClB+D,EAAO,IAAI/B,EAAK,CACrB8C,QAASvF,KAAKR,SAAS+F,QACvB7G,UAAWA,EAAUG,QACrBZ,MAAOS,EAAUT,MACjBU,MAAOD,EAAUC,MACjBuF,QAASoB,EACTnC,KAAMkC,EACNlB,iBAAqD,IAApCnE,KAAKR,SAASgG,kBAC5BC,UACDH,EACA5F,UAAEC,OAAO,CAAEwD,KAAMnD,KAAKkD,YAAY,IAAMlD,KAAKR,SAASgG,oBAErD,OAGW,MAAXxF,KAAKwD,KAAkD,IAApCxD,KAAKoE,MAAM,cAAeI,IAChDxE,KAAK0F,aAAalB,EAAM9F,EAAUoC,mBAAmB,kBAAMpC,EAAUsC,cAGvE6B,EAAQrC,UAAUqD,aAAe,SAAUlF,OACpC2G,EAAQ3G,EAAMgH,OACdnB,EAAO,IAAI/B,EAAK,CACrB8C,QAASvF,KAAKR,SAAS+F,QACvB7G,UAAW,KACXT,MAAO,KACPU,MAAOA,EACPuF,QAASoB,EACTnC,KAAMxE,EAAMiH,cACZzB,iBAAqD,IAApCnE,KAAKR,SAASgG,kBAC5BC,UACDH,EACA5F,UAAEC,OAAO,CAAEwD,KAAMnD,KAAKkD,YAAY,IAAMlD,KAAKR,SAASgG,oBAErD,OAGW,MAAXxF,KAAKwD,KAAgD,IAAlCxD,KAAKoE,MAAM,YAAaI,IAC9CxE,KAAK0F,aAAalB,EAAMc,EAAMvE,0BAGhC8B,EAAQrC,UAAUkF,aAAe,SAAUlB,EAAMqB,EAAMC,cAEvC,MAAX9F,KAAKwD,IACRxD,KAAKwD,GAAGa,eAGJb,GAAK,IAAIJ,UAAMoB,EAAKN,QAAS,CACjCrF,QAASmB,KAAK0E,cAAc,CAC3BC,QAASH,EAAK1B,aAAe9C,KAAKR,SAASsD,YAC3CjE,QAAS2F,EAAK3F,SAAW,KAE1BkH,SAAU3I,SAAS6C,KACnB+F,QAAS,WACRC,EAAKlB,eAAe7E,GAAG,qBAAoB,8BAA8B,SAACC,GACzE8F,EAAK7B,MAAM,WAAY1E,UAAES,EAAEyF,eAAeM,KAAK,iBAAkB1B,EAAMrE,OAGzEgG,eAAgB,SAAC3C,UAAOA,EAAGa,WAC3B+B,OAAQ,kBAAsC,IAAhCH,EAAK7B,MAAM,UAAWI,IACpC6B,UAAW,WACVJ,EAAKzC,GAAK,KACVyC,EAAKjF,UACLiF,EAAK7B,MAAM0B,EAAYtB,IAExB8B,uBAAwB,kBAAMT,MAIhChD,EAAQrC,UAAU4D,MAAQ,SAAUmC,GAChB,iBAARA,IACVA,EAAMvG,KAAKR,SAAS+G,+BAFsBC,mCAAAA,0BAIrB,mBAARD,EAAqBA,EAAIE,MAAMzG,KAAMwG,QAAYE,GAMhE7D,EAAQjD,SAAW,CAIlB2F,QAAS,KAMTpC,KAAM,KAMNO,cAAc,EAMdC,gBAAgB,EAKhBC,iBAAiB,EAMjBd,YAAa,KAMboC,WAAY,KAOZM,mBAAmB,EAMnBlC,cAAe,CACdqD,UAAW,OACXC,aAAa,EACbC,QAAS,SACTC,WAAW,EACXC,aAAa,EACbC,cAAc,GAOf5E,YAAa,KAMb6E,UAAW,KAOXC,SAAU,KAMVC,QAAS"}