{"version":3,"file":"anno-tip.min.js.map","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/TextMonitor.js","../src/AnnoTip.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\"use strict\";\n\nimport $ from 'jquery';\n\nconst NS_SEL = \"annotip-text\";\n\nfunction isMultiElement(range1, range2) {\n\treturn $.unique([\n\t\trange1.startContainer, range1.endContainer, \n\t\trange2.startContainer, range2.endContainer\n\t]).length > 0;\n}\n\nfunction normalizeRange(range) {\n\tconst startNode = range.startContainer,\n\t\tendNode = range.endContainer;\n\n\tif (startNode == endNode) {\n\t\tif (range.startOffset > range.endOffset) {\n\t\t\tconst _t = range.startOffset;\n\n\t\t\trange.setStartOffset(range.endOffset);\n\t\t\trange.setEndOffset(_t);\n\t\t}\n\t}\n\n\treturn range;\n}\n\nfunction mergeRanges(ranges) {\n\tif (ranges.length == 0)\n\t\treturn null;\n\tif (ranges.length == 1)\n\t\treturn ranges[0];\n\t\n\t// TODO: Make sure the ranges are properly ordered.\n\tconst lastR = ranges[ranges.length - 1],\n\t\tunitedR = document.createRange();\n\n\tunitedR.setStart(ranges[0].startContainer, ranges[0].startOffset);\n\tunitedR.setEnd(lastR.endContainer, lastR.endOffset);\n\n\treturn unitedR;\n}\n\n\n/**\n * A wrapper of relevant selection data, to be passed to {@link AnnoTip}.\n * @param {String} content The plain text version of the selected content\n * @param {Event} event The event that triggered the selection (mouseup)\n * @param {Array<Range>} ranges The array of ranges, that this selection occupies\n */\nfunction TextSelection(selection, event, ranges) {\n\tthis.selection = selection;\n\tthis.content = selection.toString();\n\tthis.event = event;\n\tthis.range = mergeRanges(ranges);\n}\n\n/**\n * Returns the DOM element that wrapps the selection.\n * @returns {Element} The DOM element containing the entire selection.\n */\nTextSelection.prototype.getElement = function() {\n\tconst parentEl = this.range.commonAncestorContainer;\n\n\treturn parentEl instanceof Element ? parentEl : parentEl.parentElement;\n};\n\n/**\n * Returns the bounding box of the selection.\n * @returns {DOMRect} The rectangle containing all elements & nodes of the selection.\n */\nTextSelection.prototype.getBoundingRect = function () {\n\treturn this.range.getBoundingClientRect();\n};\n\n/**\n * Discards the selection, i.e. - deselect.\n * @returns {TextSelection} For chaining calls.\n */\nTextSelection.prototype.discard = function () {\n\tthis.selection.removeAllRanges();\n\n\treturn this;\n};\n\n\n/**\n * Initializes a text selection monitoring mechanis.about-content\n * \n * @param {Element} element The parent DOM element to attach the whole text selection monitoring mechanism to.\n * @param {Object} settings Settings for monitoring. Check {@link TextMonitor.defaults}.\n */ \nfunction TextMonitor(selector, settings) {\n\tthis.elements = selector;\n\tthis.settings = $.extend(true, {}, TextMonitor.defaults, settings);\n\n\tconst oneElement = $(selector)[0];\n\n\tif (oneElement.ownerDocument) {\n\t\tthis.document = oneElement.ownerDocument;\n\t\t\n\t\t$(this.document.body).on('mouseup.' + NS_SEL, (e) => this._handleSelection(e));\n\t} else {\n\t\tthrow new Error(`Non-attached element(s) used for text selection: ${selector}`);\n\t}\n}\n\n/**\n * Detach the text selection monitoring mechanism.\n * @returns {TextMonitor} For chaining calls.\n */\nTextMonitor.prototype.detach = function () {\n\tif (this.document)\n\t\t$(this.document.body).off('.' + NS_SEL);\n\n\treturn this;\n};\n\n/**\n * Handles the mouse-up event, supposedly after a selection is made.\n * @param event The actual mouse-up event.\n * @private\n */\nTextMonitor.prototype._handleSelection = function (event) {\n\tconst selection = this.document.getSelection();\n\n\tif (selection.isCollapsed) return;\n\t\n\tconst myRanges = [];\n\n\tfor (let i = 0; i < selection.rangeCount; ++i) {\n\t\tconst r = selection.getRangeAt(i);\n\n\t\tif (!$(r.commonAncestorContainer).parents().is(this.elements))\n\t\t\tcontinue;\n\t\telse if (this.multipleNodes || myRanges.length == 0 || !isMultiElement(myRanges[0], r))\n\t\t\tmyRanges.push(normalizeRange(r));\n\t}\n\n\tif (myRanges.length > 0)\n\t\tthis.settings.onSelection(new TextSelection(selection, event, myRanges));\n};\n\n/**\n * Default options.\n */\nTextMonitor.defaults = {\n\t/**\n\t * Whether selections over more than one DOM element are allowed.\n\t * */ \n\tmultipleNodes: false,\n\t/**\n\t * Handler when a selection is detected. `function (TextSelection)`.\n\t */\n\tonSelection: null\n};\n\nexport default TextMonitor;\n","\"use strict\";\n\n/**\n * AnnoTip library main source.\n * Author: Ivan (Jonan) Georgiev, 2020\n */\nimport './AnnoTip.css';\n\nimport $ from 'jquery';\nimport tippy from 'tippy.js';\nimport TextMonitor  from './TextMonitor';\n\nconst NS_ANNO = 'annotip-main';\nconst DEF_CONTENT = `<textarea placeholder=\"Enter your comment...\"></textarea>`;\nconst DEF_ACTIONS = [\n\t{\n\t\taction: \"cancel\",\n\t\thelp: \"Cancel the annotation\"\n\t}, {\n\t\taction: \"edit\",\n\t\thelp: \"Make the annotation\"\n\t}\n];\nconst EXPANDED_ACTIONS = [\n\t{\n\t\taction: \"cancel\",\n\t\thelp: \"Discard the annotation\"\n\t}, {\n\t\taction: \"ok\",\n\t\thelp: \"Confirm the annotation\"\n\t}\n];\n\n\n/**\n * The wrapper of annotation object being passed around during the whole process.\n * @param {Object} context The context, as being passed to AnnoTip with the settings\n * @param {String} selection The content (text) that is selected\n * @param {Range} range The DOM nodes range, that this selection occupies\n * @param {Event} event The DOM Event that triggered the annotation mechanism\n * @param {Element} element The DOM element, holding the selection\n * @description The `element` represents the closest common ancesstor of the nodes\n * in `range`, which - in most cases - is limited to one element, anyways.\n*/\nfunction Anno(base) {\n\t$.extend(true, this, base);\n}\n\n/**\n * Some AnnoTip helpers\n * @ignore\n */\nconst prepareButton = (info) => `\n\t<button data-annotip-action=\"${info.action}\"\n\t\t\tclass=\"annotip-action-${info.action}\"\n\t\t\ttitle=\"${info.help || \"\"}\"\n\t/>`;\n\n/**\n * Initialize the annotation engine\n * @param {Object} settings Custom settings for the annotation engine.\n * @returns {AnnoTip} The instance just created.\n */\nfunction AnnoTip(settings) {\n\tthis.settings = $.extend(true, {}, AnnoTip.defaults, settings);\n\t\n\t// Normalize the settings\n\tif (typeof this.settings.textSelection === 'string')\n\t\tthis.settings.textSelection = this.settings.textSelection.toLowerCase();\n\tif (this.settings.actionsHtml === null)\n\t\tthis.settings.actionsHtml = $.map(DEF_ACTIONS, (a) => prepareButton(a)).join('');\n\n\ttippy.setDefaultProps(this.settings.tippySettings);\n\t\n\tthis.monitors = [];\n\tthis.tp = null;\n}\n\n/**\n * Attach handlers on the selected elements, both with text and element monitoring\n * \n * @param {String} selector The jQuery selector to use for listing all elements to monitor.\n * @returns {AnnoTip} A self instance for chaining invocations.\n * @description This method can be invoked many times, with difference selectors.\n */\nAnnoTip.prototype.attach = function (selector) {\n\tif (this.settings.textSelection && this.settings.textSelection !== 'none') {\n\t\tthis.monitors.push(new TextMonitor(selector, {\n\t\t\tmultipleNodes: this.settings.textSelection === 'multi',\n\t\t\tonSelection: (content, event, range) => this._handleSelection(content, event, range)\n\t\t}));\n\t}\n\n\treturn this;\n};\n\n/**\n * Apply the list of annotatons to the page, so that they can be edited later.\n * \n * @param {Array<Object>} annos List of annotations in the same format, as they were created.\n * @returns {AnnoTip} A self instance for chaining invocations.\n */\nAnnoTip.prototype.applyAnnos = function (annos) {\n\tannos.test = \"\";\n\t// TODO: Make sure there is something meaningful to be done here!\n\t\n\treturn this;\n};\n\n/**\n * Close the annotation box, if it is openned at all.\n * @returns {AnnoTip} A self instance for chaining invocations.\n */\nAnnoTip.prototype.discard = function () {\n\tif (this.tp != null)\n\t\tthis.tp.destroy();\n\n\tthis.tp = null;\n\n\treturn this;\n};\n\n/**\n * Update the content and actions lines of the annotation box,\n * based on the newly provided object.\n * \n * @param {Object} anno The annotation object to be used for content resetting\n * @returns {AnnoTip} A self instance for chaining invocations.\n */\nAnnoTip.prototype.update = function (anno) {\n\tthis.tp.setContent(this._prepareFrame({ \n\t\tactions: anno.actionsHtml || $.map(EXPANDED_ACTIONS, (a) => prepareButton(a)).join(''),\n\t\tcontent: anno.content || DEF_CONTENT\n\t}));\n\n\treturn this;\n};\n\n/**\n * Detach the AnnoTip from the page.\n * @returns {AnnoTip} A self instance for chaining invocations.\n*/\nAnnoTip.prototype.detach = function () {\n\t// Destroy the Tippy instance, if such exists.\n\tif (this.tp != null)\n\t\tthis.tp.destroy();\n\n\tthis._tippyBox$ = null;\n\t\n\t// Detach all monitors\n\t$.each(this.monitors, (i, s) => s.detach());\n\tthis.monitors = [];\n\n\treturn this;\n};\n\nAnnoTip.prototype.getFrame = function () {\n\treturn $('div.annotip-frame', this._getTippyBox()[0]);\n};\n\n/**\n * Private methods\n * @ignore\n */\n\nAnnoTip.prototype._getTippyBox = function () {\n\tif (!this._tippyBox$)\n\t\tthis._tippyBox$ = $(\"div.tippy-box\");\n\n\treturn this._tippyBox$;\n};\n\nAnnoTip.prototype._prepareFrame = function (info) {\n\tconst frameClasses = ['annotip-frame'];\n\n\tif (this.settings.tippySettings.theme)\n\t\tframeClasses.push(this.settings.tippySettings.theme);\n\tif (typeof this.settings.classNames === 'string')\n\t\tframeClasses.push(this.settings.classNames);\n\telse if (Array.isArray(this.settings.classNames))\n\t\tframeClasses.push(...this.settings.classNames);\n\t\n\treturn `\n\t\t<div class=\"${frameClasses.join(' ')}\">\n\t\t\t<div class=\"annotip-dlg\">${info.content}</div>\n\t\t\t<div class=\"annotip-actions\">${info.actions}</div>\n\t\t</div>`;\n};\n\nAnnoTip.prototype._handleSelection = function (selection) {\n\tconst anno = new Anno({\n\t\tcontext: this.settings.context,\n\t\tselection: selection.content,\n\t\trange: selection.range,\n\t\tevent: selection.event,\n\t\telement: selection.getElement()\n\t});\n\n\tif (this.tp != null || this._call('onSelection', anno) === false)\n\t\treturn;\n\t\n\t// Cleanup the previous instance, if such was created.\n\tif (this.tp != null)\n\t\tthis.tp.destroy();\n\n\t// Go, and create a new one.\n\tthis.tp = new tippy(anno.element, {\n\t\tcontent: this._prepareFrame({ \n\t\t\tactions: anno.actionsHtml || this.settings.actionsHtml, \n\t\t\tcontent: anno.content || ''\n\t\t}),\n\t\tappendTo: document.body,\n\t\tonShown: () => {\n\t\t\t// Quite a complex expression. But works! Relies on jQuery .chaining\n\t\t\tanno.element = this._getTippyBox().on('click.' + NS_ANNO, 'div.annotip-actions button', (e) => {\n\t\t\t\tthis._call('onAction', $(e.currentTarget).data('annotipAction'), anno, e);\n\t\t\t})[0];\n\t\t},\n\t\tonClickOutside: (tp) => tp.destroy(),\n\t\tonHide: () => this._call('onClose', anno) !== false,\n\t\tonDestroy: () => { this.tp = null; selection.discard(); },\n\t\tgetReferenceClientRect: () => selection.getBoundingRect()\n\t});\n};\n\nAnnoTip.prototype._call = function (hnd, ...moreArgs) {\n\tif (typeof hnd === 'string')\n\t\thnd = this.settings[hnd];\n\n\treturn typeof hnd === 'function' ? hnd.apply(this, moreArgs) : undefined;\n};\n\n/**\n * Default settings.\n */\nAnnoTip.defaults = {\n\t/**\n\t * The user-provided context to be added to each {@link Anno} created.\n\t */\n\tcontext: null,\n\n\t/**\n\t * Whether to install text selection monitoring. {@link TextMonitor}.\n\t * Currently this is the only supported mode.\n\t */\n\ttextSelection: true,\n\n\t/**\n\t * Whether to install element click/handling mointoring. Not supported.\n\t */\n\telementSelection: true,\n\n\t/**\n\t * A custom-provided HTML for action buttons, which are openned when a\n\t * selection is recognized.\n\t */\n\tactionsHtml: null,\n\n\t/**\n\t * Additional class-names to be applied to the annotation frame DOM element. \n\t * Can be both array and string (with one or more class names).\n\t */\n\tclassNames: null,\n\n\t/**\n\t * The settings to be passed to the underlying Tippy.js box engine.\n\t * {@link https://atomiks.github.io/tippyjs/}.\n\t */\n\ttippySettings: {\n\t\tplacement: 'auto',\n\t\thideOnClick: false,\n\t\ttrigger: 'manual',\n\t\tallowHTML: true,\n\t\tinteractive: true,\n\t\tshowOnCreate: true\n\t},\n\n\t/**\n\t * Handler to be invoked when a selection is made. The constructed {@link Anno} object\n\t * is passed.\n\t */\n\tonSelection: null,\n\n\t/**\n\t * Handler to be invoked on user action. The default actions are `edit`, `ok` and `cancel`.\n\t * The constructed {@link Anno} object is passed.\n\t */\n\tonAction: null,\n\n\t/**\n\t * Handler to be invoked when the annotation box is about to be closed.\n\t * The constructed {@link Anno} object is passed.\n\t */\n\tonClose: null\n};\n\nexport default AnnoTip;\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","normalizeRange","range","startContainer","endContainer","startOffset","endOffset","_t","setStartOffset","setEndOffset","TextSelection","selection","event","ranges","content","toString","length","lastR","unitedR","createRange","setStart","setEnd","mergeRanges","TextMonitor","selector","settings","elements","$","extend","defaults","oneElement","ownerDocument","Error","this","body","on","e","_this","_handleSelection","prototype","getElement","parentEl","commonAncestorContainer","Element","parentElement","getBoundingRect","getBoundingClientRect","discard","removeAllRanges","detach","off","getSelection","isCollapsed","range1","range2","myRanges","i","rangeCount","r","getRangeAt","parents","is","multipleNodes","unique","push","onSelection","DEF_ACTIONS","action","help","EXPANDED_ACTIONS","Anno","base","prepareButton","info","AnnoTip","textSelection","toLowerCase","actionsHtml","map","a","join","tippy","setDefaultProps","tippySettings","monitors","tp","attach","applyAnnos","annos","test","destroy","update","anno","setContent","_prepareFrame","actions","_tippyBox$","each","s","getFrame","_getTippyBox","frameClasses","theme","classNames","Array","isArray","context","element","_call","appendTo","onShown","_this2","currentTarget","data","onClickOutside","onHide","onDestroy","getReferenceClientRect","hnd","moreArgs","apply","undefined","elementSelection","placement","hideOnClick","trigger","allowHTML","interactive","showOnCreate","onAction","onClose"],"mappings":"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"}